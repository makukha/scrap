[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "scrap"
description = "Web testing utilities"
authors = [
  {name = "Michael Makukha", email = "m.makukha@gmail.com"},
]
license = {text = "MIT"}
readme = "README.md"
urls.Documentation = "https://github.com/makukha/scrap#readme"
urls.Homepage = "https://github.com/makukha/scrap"
urls.Repository = "https://github.com/makukha/scrap"
urls.Issues = "https://github.com/makukha/scrap/issues"
urls.Changelog = "https://github.com/makukha/scrap/blob/main/CHANGELOG.md"
keywords = []
classifiers = [
  # see https://pypi.org/classifiers/
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3.14",
  "Programming Language :: Python :: Implementation :: CPython",
  "Topic :: Documentation",
  "Topic :: Software Development",
  "Topic :: Software Development :: Libraries",
  "Typing :: Typed",
]
dynamic = ["version"]

requires-python = ">=3.12"
dependencies = [
    "lxml>=5.4.0",
    "typing-extensions>=4.13.2",
    "yarl>=1.20.0",
]

[dependency-groups]
dev = [
  "bump-my-version>=1.0 ; python_version >= '3.13'",
  "caseutil>=0.7.2 ; python_version >= '3.13'",
  "docsub>=0.9.0 ; python_version >= '3.13'",
  "genbadge[tests,coverage]>=1.1 ; python_version >= '3.13'",
  "lxml-stubs>=0.5.1",
  "mypy>=1.0 ; python_version >= '3.13'",
  "ruff>=0.9 ; python_version >= '3.13'",
  "scriv>=1.5 ; python_version >= '3.13'",
  "typing_extensions>=4 ; python_version >= '3.13'",
]
sphinx = [
  # see readthedocs.yaml
  "furo ; python_version >= '3.12'",
  "myst-parser ; python_version >= '3.12'",
  "sphinx ; python_version >= '3.12'",
  "sphinx-copybutton ; python_version >= '3.12'",
  "sphinx-design ; python_version >= '3.12'",
  "sphinx-sitemap ; python_version >= '3.12'",
]
testing = [
  "coverage>=7 ; python_version >= '3.13'",
  "doctestcase>=0.2.2",
  "lxml-stubs>=0.5.1",
  "mypy>=1",
  "pytest>=8",
  "pytest-sugar>=1 ; python_version >= '3.13'",
]

# bump-my-version

[tool.bumpversion]
allow_dirty = true
current_version = "0.0.0"
files = [
  {filename = ".copier-answers.yml"},
  {filename = "docs/badges.md"},
  {filename = "docs/sphinx/conf.py"},
  {filename = "src/scrap/__version__.py"},
]

# coverage

[tool.coverage]
paths.source = ["src/", "**/site-packages/"]
run.branch = true
run.data_file = ".tmp/.coverage"
run.parallel = true
run.relative_files = true
run.source_pkgs = ["scrap"]
report.precision = 1
report.skip_empty = true
html.directory = ".tmp/htmlcov"
xml.output = ".tmp/coverage.xml"

# hatch

[tool.hatch.build]
only-packages = true
[tool.hatch.version]
path = "src/scrap/__version__.py"

# mypy

[tool.mypy]
incremental = false
python_version = "3.12"
strict = true
exclude = [
  "docsubfile.py",  # todo: include docsubfile.py when typing bugs are fixed
]
[[tool.mypy.overrides]]
module = "tests.*"
allow_incomplete_defs = true
allow_untyped_defs = true
[[tool.mypy.overrides]]
module = "tests.usage.*"
allow_incomplete_defs = false
allow_untyped_defs = false

# ruff

[tool.ruff]
[tool.ruff.lint]
select = [
  "B",       # flake8-bugbear
  "E4",      # pycodestyle: Import
  "E7",      # pycodestyle: Statement
  "E9",      # pycodestyle: Runtime
  "F",       # pyflakes
  "I",       # isort
  "RUF100",  # ruff: Unused `noqa` directive
  "S",       # flake8-bandit
]
per-file-ignores."tests/**/*.py" = [
  "B008",  # Do not perform function call in argument defaults
  "I001",  # Import block is un-sorted or un-formatted
  "S101",  # Use of `assert` detected
  "S102",  # Use of `exec` detected
  "S108",  # Probable insecure usage of temporary file or directory
  "S603",  # `subprocess` call: check for execution of untrusted input
]
[tool.ruff.format]
quote-style = "single"
docstring-code-format = true
docstring-code-line-length = "dynamic"

# scriv

[tool.scriv]
categories = ["Security ‚ö†Ô∏è", "Breaking üî•", "Removed üí®", "Deprecated ‚ùÑÔ∏è", "Added üåø", "Experimental üß™", "Changed", "Fixed", "Docs", "Misc"]
entry_title_template = "[{{ version }}](https://github.com/makukha/scrap/releases/tag/v{{ version }}) ‚Äî {{ date.strftime('%Y-%m-%d') }}"
format = "md"
fragment_directory = "NEWS.d"
md_header_level = "2"
new_fragment_template = "file: NEWS.d/.new_fragment.md.j2"
version = "literal: pyproject.toml: tool.bumpversion.current_version"
